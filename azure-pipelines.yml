# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: TerraformInstaller@1
  displayName: 'Terraform install'
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  displayName: 'terraform init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'Visual Studio Professional Subscription(358697ff-3d25-42c3-8d65-fb576dd74214)'
    backendAzureRmResourceGroupName: 'test_RG'
    backendAzureRmStorageAccountName: 'sgcitest001'
    backendAzureRmContainerName: 'contcitest001'
    backendAzureRmKey: $(KEY)

- task: TerraformTaskV4@4
  displayName: 'terraform Plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'Visual Studio Professional Subscription(1)(358697ff-3d25-42c3-8d65-fb576dd74214)'

- task: TerraformTaskV4@4
  displayName: 'terraform validate'
  inputs:
    provider: 'azurerm'
    command: 'validate'

- task: TerraformTaskV4@4
  displayName: 'terraform apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'Visual Studio Professional Subscription(2)(358697ff-3d25-42c3-8d65-fb576dd74214)'



